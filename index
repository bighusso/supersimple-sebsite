<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<title>Password level 1</title>
<style>
body, html {
  height: 100px;
  margin: 0;
  font-family: 'Courier New', Courier, monospace;
  color: #0F0; /* Green text */
  background: #000; /* Black background */
}
.bg {
  /* The image used */
  background-image: url(./Background1.jpg);
  opacity: 0.5;
  /* Full height */
  height: 100%;

  /* Center and scale the image nicely */
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}


.top-bar .logo {
  font-weight: bold;
  font-size: 150%;
}
.top-bar .lives-remaining {
  flex-grow: 1; /* Makes it take up the available space */
  text-align: center;
}

/* top bar buttons animation */
.top-bar .control-buttons button {
  --color: #00A97F;
  --color2: rgb(10, 25, 30);
  padding: 0.8em 1.75em;
  background-color: transparent;
  border-radius: 6px;
  border: .3px solid var(--color);
  transition: .5s;
  position: relative;
  overflow: hidden;
  z-index: 1;
  font-weight: 300;
  font-size: 17px;
  font-family: 'Roboto', 'Segoe UI', sans-serif;
  text-transform: uppercase;
  color: var(--color);
  background: none;
  border: none;
  color: #0F0; /* Green text */
  margin: 0 10px;
  padding: 5px 10px;
  cursor: pointer; 
  font-size: 16px;
 }
 
 .top-bar .control-buttons button::after, .top-bar .control-buttons button::before {
  content: '';
  display: block;
  height: 100%;
  width: 100%;
  transform: skew(90deg) translate(-50%, -50%);
  position: absolute;
  inset: 50%;
  left: 25%;
  z-index: -1;
  transition: .5s ease-out;
  background-color: var(--color);
 }
 
 .top-bar .control-buttons button::before {
  top: -50%;
  left: -25%;
  transform: skew(90deg) rotate(180deg) translate(-50%, -50%);
 }
 
 .top-bar .control-buttons button:hover::before {
  transform: skew(45deg) rotate(180deg) translate(-50%, -50%);
 }
 
 .top-bar .control-buttons button:hover::after {
  transform: skew(45deg) translate(-50%, -50%);
 }
 
 .top-bar .control-buttons button:hover {
  color: var(--color2);
 }
 
 .top-bar .control-buttons button:active {
  filter: brightness(.7);
  transform: scale(.98);
 }

.top-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: #272727; /* Black background */
  color: #0F0; /* Green text */
}


/* top loading animation */
.loader {
  width: 28px;
  aspect-ratio: 1.154;
  position: relative;
  background: conic-gradient(from 120deg at 50% 64%,#0000, #25b043 1deg 120deg,#0000 121deg);
  animation: l27-0 1.5s infinite cubic-bezier(0.3,1,0,1);
}
.loader:before,
.loader:after {
  content:'';
  position: absolute;
  inset:0;
  background:inherit;
  transform-origin: 50% 66%;
  animation: l27-1 1.5s infinite;
}
.loader:after {
  --s:-1;
}
@keyframes l27-0 {
   0%,30%      {transform: rotate(0)}
   70%         {transform: rotate(120deg)}
   70.01%,100% {transform: rotate(360deg)}
}
@keyframes l27-1 {
   0%      {transform: rotate(calc(var(--s,1)*120deg)) translate(0)}
   30%,70% {transform: rotate(calc(var(--s,1)*120deg)) translate(calc(var(--s,1)*-5px),10px)}
   100%    {transform: rotate(calc(var(--s,1)*120deg)) translate(0)}
}

.center-box img{
  width: 120px;
  height: 120px;
  
}
.center-box h1 {
  margin-bottom: 20px;
  font-size: 24px;
  text-transform: uppercase;
  text-shadow: #000 2px 2px;
}
.center-box input{
  width: 50%;
  padding: 8px;
  margin-bottom: 20px;
  background: white;
  color:#0F0; /* Green text */
}

/* input design codes below */

  .input {
    max-width: 190%;
    border: none;
    outline: none;
    background: none;
    font-size: 18px;
    color: #222;
    padding: 15px 5px 10px 20px;
    box-shadow: inset 4px 4px 4px rgba(15, 15, 15, 0.315),4px 4px 4px rgba(28, 28, 28, 0.13);
    border-radius: 25px;
    background-clip: padding-box;
  }
  
  .input:focus {
    padding-bottom: 10px;
  }
  
  .input::placeholder {
    color: #222;
    text-transform: uppercase;
    transition: all 0.3s ease;
    font-size: 19px;
    font-weight: 700;
    letter-spacing: .3px;
  }
  
  .input:focus::placeholder {
    color: #999;
  }
  

#passwordInput{
  color: green;
  font-weight: bold; 
}

.center-box button {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    font-size: 17px;
    padding: 0.75em 1.5em; /* Reduced padding */
    font-weight: 500;
    background: #1f2937;
    color: white;
    border: none;
    position: relative;
    overflow: hidden;
    border-radius: 0.6em;
    cursor: pointer;
    width: 8em; /* Added width */
    height: 2.75em; /* Adjusted height to maintain aspect ratio */
  }
  
  .gradient {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    border-radius: 0.6em;
    margin-top: -0.25em;
    background-image: linear-gradient(
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 0.3)
    );
  }
  
  .label {
    position: relative;
    top: -1px;
  }
  
  .transition {
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 500ms;
    background-color: rgba(16, 185, 129, 0.6);
    border-radius: 9999px;
    width: 0;
    height: 0;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
  
  button:hover .transition {
    width: 14em;
    height: 14em;
  }
  
  button:active {
    transform: scale(0.97);
  }
  
  
  .label {
    position: relative;
    top: -1px;
  }
  
  .transition {
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 500ms;
    background-color: rgba(16, 185, 129, 0.6);
    border-radius: 9999px;
    width: 0;
    height: 0;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
  
  button:hover .transition {
    width: 10em;
    height: 10em;
  }
  
  button:active {
    transform: scale(0.97);
  }

.center-box h2 {
  color: rgb(128, 0, 0); /*Default color*/
}

.hint-box {
  position: absolute;
  top: 80px; /* Below the top bar */
  right: -400px; /* Start off screen */
  width: 350px; /* Width of the hint box */
  background: #000; /* Black background */
  color: #0F0; /* Green text */
  padding: 20px;
  border: 2px solid #0F0; /* Green border */
  border-radius: 5px;
  transition: right 0.5s; /* Smooth transition for the slide-in effect */
  z-index: 100; /* Ensure it's above other elements */
  display: none;
}


.center-box .profile {
  position: fixed;
  left: 30%;
  right: 30%;
  top: 22%;
}
.center-box {
  position: absolute;
  top: 53%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 950px;
  padding: 200px;
  border: 2px solid #0A0;
  box-sizing: content-box;
  color: rgb(252, 253, 252);
  text-align: center;
  border-radius: 10px;
  overflow: hidden; /* Hide overflowing content from video */

  &::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.75); /* Semi-transparent black overlay */
  z-index: -1; /* Place the overlay behind the content */
  border-radius: 10px;
}
}
.center-box video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -1;
  border-radius:Â 10px;
}
.pause-menu {
  position: fixed;
  left: 38%;
  right: 50px;
  top: 200px;
  padding: 70px 60px;
  background: #000; /* Black background */
  border: 2px solid #0F0; /* Green border*/ 
  color: #0F0; /* Green text */
  width: 380px; /* Adjust width as needed */
  display: none;
}
.pause-menu h1 {
  position: fixed;
  bottom: 500px;
  left: 42%;
  margin-bottom: 50px; /* Space between title and buttons*/ 
}
.pause-menu button {
  background-color: #0F0; /* Green background*/ 
  color: #000; /* Black text */
  border: none;
  padding: 20px 20px;
  margin: 40px 0; /* Space between buttons */
  display: block; /* Each button on a new line */
  width: 100%; /* Full width of the parent */
  box-sizing: border-box; /* Padding included in width */
  cursor: pointer;
  border-radius: 5px;
}

/* pause menu button animation */

.cta {
  display: flex;
  padding: 11px 33px;
  text-decoration: none;
  font-family: 'Poppins', sans-serif;
  font-size: 130%;
  color: white;
  background: #6225E6;
  transition: 1s;
  box-shadow: 6px 6px 0 black;
  transform: skewX(-15deg);
  border: none;
}

.cta:focus {
  outline: none;
}

.cta:hover {
  transition: 0.5s;
  box-shadow: 10px 10px 0 #FBC638;
}

.cta .second {
  transition: 0.5s;
  margin-right: 0px;
}

.cta:hover  .second {
  transition: 0.5s;
  margin-right: 45px;
}

.span {
  transform: skewX(15deg)
}

.second {
  width: 20px;
  margin-left: 30px;
  position: relative;
  top: 12%;
}

.one {
  transition: 0.4s;
  transform: translateX(-60%);
}

.two {
  transition: 0.5s;
  transform: translateX(-30%);
}

.cta:hover .three {
  animation: color_anim 1s infinite 0.2s;
}

.cta:hover .one {
  transform: translateX(0%);
  animation: color_anim 1s infinite 0.6s;
}

.cta:hover .two {
  transform: translateX(0%);
  animation: color_anim 1s infinite 0.4s;
}

@keyframes color_anim {
  0% {
    fill: white;
  }

  50% {
    fill: #FBC638;
  }

  100% {
    fill: white;
  }
}

#passwordInput {
  font-weight:bold;
  text-align: center;
}
/* Progress bar container */
.progress-container {
  display: flex;
  align-items: center;
  height: 20px; /* Height of the progress bar */
  width: 30%; /* Half the size of the original */
  margin-left: 20px; /* Margin left of the logo */
  margin-right: 20px;
}

/* Individual steps in the progress bar */
.progress-step {
  flex: 1; /* Distribute space evenly */
  text-align: center;
  color: white;
  position: relative; /* For pseudo-elements positioning */
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8em; /* Smaller font size for the text */
}

/* Pseudo-element for the step connecting lines */
.progress-step:not(:last-child)::after {
  content: '';
  position: absolute;
  top: 50%;
  right: 0;
  height: 2%; /* Line thickness */
  width: 100%; /* Line width */
  background: white; /* Line color */
  z-index: -1;
  transform: translateX(50%);
}

/* Colors for each step based on the design */
.step-1 { background: linear-gradient(to right, #213418, #4ab917); }
.step-2 { background: linear-gradient(to right, #fff,#fff); }
.step-3 { background: linear-gradient(to right, #fff,#fff); border-radius: 0 6px 6px 0; }

.level-recap-box{
  display: none;
  width: 950px;
  padding: 300px;
  padding-top: 150px;
  height: 500px;
  box-sizing: border-box;
  background: rgba(0, 0, 0, 0.7); /* Semi-transparent black background */
  color: #0F0; /* Green text color */
  text-align: center;
  border: 2px solid #0F0; /* Green border */
  border-radius: 10px;
  position: relative;
}
.level-recap-box h1 {
  color: #0F0; /* Green text color */
  margin-bottom: 0.5em;
}

.level-recap-box p {
  margin: 20px 0;
}
.level-recap-box .time,
.level-recap-box .score {
  display: block; /* New lines for time and score */
}
.level-recap-box .score {
  color: #FF0; /* Yellow color for score */
}
.btn {
position: relative;
font-size: 24px;
font-weight: 600;
padding: 15px 30px;
color: #cfef00;
background-color: transparent;
border: 2px solid #cfef00;
border-radius: 10px;
cursor: pointer;
transition: all 0.4s cubic-bezier(0.23, 1, 0.320, 1);
overflow: hidden;
}

.btn::before {
content: '';
position: absolute;
width: 100%;
height: 100%;
background: rgba(0, 255, 0, 0.356);
top: 0%;
left: -100%;
scale: 1;
border-radius: inherit;
transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
}

.btn span {
transition: all 0.7s;
position: relative;
overflow: hidden;
}

.btn span::before {
position: absolute;
content: '';
top: 0;
left: 0;
color: #0f0f0f;
width: 0;
overflow: hidden;
}

.btn:hover span::before {
width: 100%;
transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
transition-delay: 0.4s;
}

.btn:hover::before {
scale: 1;
top: 0%;
left: 0%;
}

.btn:hover {
border-color: transparent;
}

.btn:active {
scale: 0.9;
}
</style>

</head>
<body>
<div class="top-bar">
  <div class="logo">MASTERMIND</div>
  <div class="progress-container">
    <div class="progress-step step-1">EASY</div>
    <div class="progress-step step-2">MEDIUM</div>
    <div class="progress-step step-3">WORLD CLASS</div>
  Â Â </div>
  <div class="loader"></div>
  <div class="lives-remaining">Lives Remaining: 3</div>
  <div class="control-buttons">
    <button class="timer">00:00:00</button>
    <button onclick="Pause()">PAUSE</button>
    <button onclick="showHint()">HINT</button>
    <button onclick="heelo()">QUIT</button>
  </div>
  <div class="overlay"></div>
  <div class="center-box" id="center-box">
    <div class="profile">
      <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
        <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0"/>
        <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1"/>
      </svg>
    </div>
    <br> <br> <br>
    <h1>Welcome Back: Pr1nce12@KA05</h1>
    <h1>Please enter your password</h1>
    <input type="text" id="passwordInput" name="text" class="input" placeholder="Type here">
    <br>
    <button class="btn btn-outline-success"  id="confirmbutton" onclick="checkPassword()">
      <span class="transition"></span>
      <span class="gradient"></span>
      <span class="label">Confirm</span>
    </button>
    <br></br>
    <h2></h2>
    <video autoplay loop muted playsinline>
      <source src="vid.mp4" type="video/mp4">
      Your browser does not support the video tag.
    </video>
  </div>
</div>

<div class="pause-menu" id="pasue-menu">
  <h1>Game Paused</h1>
  <button type="button" id="Resume" class="cta" onclick="resume()">
    <span class="span">Resume</span>
    <span class="second">
      <svg width="50px" height="20px" viewBox="0 0 66 43" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g id="arrow" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
          <path class="one" d="M40.1543933,3.89485454 L43.9763149,0.139296592 C44.1708311,-0.0518420739 44.4826329,-0.0518571125 44.6771675,0.139262789 L65.6916134,20.7848311 C66.0855801,21.1718824 66.0911863,21.8050225 65.704135,22.1989893 C65.7000188,22.2031791 65.6958657,22.2073326 65.6916762,22.2114492 L44.677098,42.8607841 C44.4825957,43.0519059 44.1708242,43.0519358 43.9762853,42.8608513 L40.1545186,39.1069479 C39.9575152,38.9134427 39.9546793,38.5968729 40.1481845,38.3998695 C40.1502893,38.3977268 40.1524132,38.395603 40.1545562,38.3934985 L56.9937789,21.8567812 C57.1908028,21.6632968 57.193672,21.3467273 57.0001876,21.1497035 C56.9980647,21.1475418 56.9959223,21.1453995 56.9937605,21.1432767 L40.1545208,4.60825197 C39.9574869,4.41477773 39.9546013,4.09820839 40.1480756,3.90117456 C40.1501626,3.89904911 40.1522686,3.89694235 40.1543933,3.89485454 Z" fill="#FFFFFF"></path>
          <path class="two" d="M20.1543933,3.89485454 L23.9763149,0.139296592 C24.1708311,-0.0518420739 24.4826329,-0.0518571125 24.6771675,0.139262789 L45.6916134,20.7848311 C46.0855801,21.1718824 46.0911863,21.8050225 45.704135,22.1989893 C45.7000188,22.2031791 45.6958657,22.2073326 45.6916762,22.2114492 L24.677098,42.8607841 C24.4825957,43.0519059 24.1708242,43.0519358 23.9762853,42.8608513 L20.1545186,39.1069479 C19.9575152,38.9134427 19.9546793,38.5968729 20.1481845,38.3998695 C20.1502893,38.3977268 20.1524132,38.395603 20.1545562,38.3934985 L36.9937789,21.8567812 C37.1908028,21.6632968 37.193672,21.3467273 37.0001876,21.1497035 C36.9980647,21.1475418 36.9959223,21.1453995 36.9937605,21.1432767 L20.1545208,4.60825197 C19.9574869,4.41477773 19.9546013,4.09820839 20.1480756,3.90117456 C20.1501626,3.89904911 20.1522686,3.89694235 20.1543933,3.89485454 Z" fill="#FFFFFF"></path>
          <path class="three" d="M0.154393339,3.89485454 L3.97631488,0.139296592 C4.17083111,-0.0518420739 4.48263286,-0.0518571125 4.67716753,0.139262789 L25.6916134,20.7848311 C26.0855801,21.1718824 26.0911863,21.8050225 25.704135,22.1989893 C25.7000188,22.2031791 25.6958657,22.2073326 25.6916762,22.2114492 L4.67709797,42.8607841 C4.48259567,43.0519059 4.17082418,43.0519358 3.97628526,42.8608513 L0.154518591,39.1069479 C-0.0424848215,38.9134427 -0.0453206733,38.5968729 0.148184538,38.3998695 C0.150289256,38.3977268 0.152413239,38.395603 0.154556228,38.3934985 L16.9937789,21.8567812 C17.1908028,21.6632968 17.193672,21.3467273 17.0001876,21.1497035 C16.9980647,21.1475418 16.9959223,21.1453995 16.9937605,21.1432767 L0.15452076,4.60825197 C-0.0425130651,4.41477773 -0.0453986756,4.09820839 0.148075568,3.90117456 C0.150162624,3.89904911 0.152268631,3.89694235 0.154393339,3.89485454 Z" fill="#FFFFFF"></path>
        </g>
      </svg>
    </span> 
</button>

  <button type="button" id="Exit" class="cta">
    <span class="span">Exit</span>
    <span class="second">
      <svg width="50px" height="20px" viewBox="0 0 66 43" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g id="arrow" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
          <path class="one" d="M40.1543933,3.89485454 L43.9763149,0.139296592 C44.1708311,-0.0518420739 44.4826329,-0.0518571125 44.6771675,0.139262789 L65.6916134,20.7848311 C66.0855801,21.1718824 66.0911863,21.8050225 65.704135,22.1989893 C65.7000188,22.2031791 65.6958657,22.2073326 65.6916762,22.2114492 L44.677098,42.8607841 C44.4825957,43.0519059 44.1708242,43.0519358 43.9762853,42.8608513 L40.1545186,39.1069479 C39.9575152,38.9134427 39.9546793,38.5968729 40.1481845,38.3998695 C40.1502893,38.3977268 40.1524132,38.395603 40.1545562,38.3934985 L56.9937789,21.8567812 C57.1908028,21.6632968 57.193672,21.3467273 57.0001876,21.1497035 C56.9980647,21.1475418 56.9959223,21.1453995 56.9937605,21.1432767 L40.1545208,4.60825197 C39.9574869,4.41477773 39.9546013,4.09820839 40.1480756,3.90117456 C40.1501626,3.89904911 40.1522686,3.89694235 40.1543933,3.89485454 Z" fill="#FFFFFF"></path>
          <path class="two" d="M20.1543933,3.89485454 L23.9763149,0.139296592 C24.1708311,-0.0518420739 24.4826329,-0.0518571125 24.6771675,0.139262789 L45.6916134,20.7848311 C46.0855801,21.1718824 46.0911863,21.8050225 45.704135,22.1989893 C45.7000188,22.2031791 45.6958657,22.2073326 45.6916762,22.2114492 L24.677098,42.8607841 C24.4825957,43.0519059 24.1708242,43.0519358 23.9762853,42.8608513 L20.1545186,39.1069479 C19.9575152,38.9134427 19.9546793,38.5968729 20.1481845,38.3998695 C20.1502893,38.3977268 20.1524132,38.395603 20.1545562,38.3934985 L36.9937789,21.8567812 C37.1908028,21.6632968 37.193672,21.3467273 37.0001876,21.1497035 C36.9980647,21.1475418 36.9959223,21.1453995 36.9937605,21.1432767 L20.1545208,4.60825197 C19.9574869,4.41477773 19.9546013,4.09820839 20.1480756,3.90117456 C20.1501626,3.89904911 20.1522686,3.89694235 20.1543933,3.89485454 Z" fill="#FFFFFF"></path>
          <path class="three" d="M0.154393339,3.89485454 L3.97631488,0.139296592 C4.17083111,-0.0518420739 4.48263286,-0.0518571125 4.67716753,0.139262789 L25.6916134,20.7848311 C26.0855801,21.1718824 26.0911863,21.8050225 25.704135,22.1989893 C25.7000188,22.2031791 25.6958657,22.2073326 25.6916762,22.2114492 L4.67709797,42.8607841 C4.48259567,43.0519059 4.17082418,43.0519358 3.97628526,42.8608513 L0.154518591,39.1069479 C-0.0424848215,38.9134427 -0.0453206733,38.5968729 0.148184538,38.3998695 C0.150289256,38.3977268 0.152413239,38.395603 0.154556228,38.3934985 L16.9937789,21.8567812 C17.1908028,21.6632968 17.193672,21.3467273 17.0001876,21.1497035 C16.9980647,21.1475418 16.9959223,21.1453995 16.9937605,21.1432767 L0.15452076,4.60825197 C-0.0425130651,4.41477773 -0.0453986756,4.09820839 0.148075568,3.90117456 C0.150162624,3.89904911 0.152268631,3.89694235 0.154393339,3.89485454 Z" fill="#FFFFFF"></path>
        </g>
      </svg>
    </span> 
</button>
</div>

<div class="hint-box" id="hintBox">
  The password is composed of four numbers, 2 of them are before the @ and the other 2 are after the @ in the username.
</div>


</body>
<script>
var livesRemaining = 3;
var timer; // Variable to store the timer interval
var totalMilliseconds = 0; // Variable to store the total elapsed milliseconds
var totalTimeInSeconds;
// Add this function to format milliseconds into "MM:SS:SSS" format
function formatTime(milliseconds) {
  var minutes = Math.floor(milliseconds / (60 * 1000));
  var seconds = Math.floor((milliseconds % (60 * 1000)) / 1000);
  var remainingMilliseconds = milliseconds % 1000;

  // Add leading zeros if necessary
  minutes = minutes < 10 ? "0" + minutes : minutes;
  seconds = seconds < 10 ? "0" + seconds : seconds;
  remainingMilliseconds = remainingMilliseconds < 100 ? (remainingMilliseconds < 10 ? "00" + remainingMilliseconds : "0" + remainingMilliseconds) : remainingMilliseconds;

  return minutes + ":" + seconds + ":" + remainingMilliseconds;
}
function startTimer() {
  timer = setInterval(function () {
    totalMilliseconds += 1; // Update every millisecond

    var timerDisplay = document.querySelector(".top-bar .timer");
    timerDisplay.textContent = formatTime(totalMilliseconds);
  }, 1);
}
window.onload = startTimer;
function stopTimer() {
  clearInterval(timer);
  totalTimeInSeconds = totalMilliseconds / 1000;
  
  // Store the total time in localStorage
  localStorage.setItem('totalTimeInSeconds', totalTimeInSeconds);

}

function showHint() {
  document.getElementById('hintBox').style.right = '10px';
  var hintbox = document.getElementById("hintBox");
  if (hintbox.style.display === "none") {
    hintbox.style.display = "block";
  } else {
    hintbox.style.display = "none";
  }    
}
function checkPassword() {

  var passwordInput = document.getElementById("passwordInput").value;
  var resultMessage = document.querySelector(".center-box h2");
  var centerbox = document.getElementById("center-box"); 
  var recap = document.getElementById("recap"); 
  if (passwordInput === "1205") {
    stopTimer();
    resultMessage.style.color = "red";
    resultMessage.textContent = "The password is correct";
    setTimeout(function() {
      window.location.href = 'file:///C:/Users/hussa/Desktop/MASTERM1ND/Password/Recap.html';
    }, 1500)
  } else {
    resultMessage.style.color = "red";
    resultMessage.textContent = "The password is incorrect";
    livesRemaining--;

    // Update lives remaining display
    document.querySelector(".top-bar .lives-remaining").textContent = "Lives Remaining: " + livesRemaining;

    // Check if lives are exhausted
    if (livesRemaining === 0) {
      // Handle game over logic here
      window.location.href= 'file:///C:/Users/hussa/Desktop/MASTERM1ND/Password/GameOver.html'
      stopTimer();
    }
  }
}
function Pause(){
      var pause = document.getElementById("pasue-menu");
      if (pause.style.display === "none") {
        pause.style.display = "block";
      } else {
        pause.style.display = "none";
      }
}
function resume(){
  var y=document.getElementById("Resume");
  var z=document.getElementById("pasue-menu");
  if (y.style.display==="none"){
    z.style.display="block";
  } else {
    z.style.display = "none";
  }
}

</script>
</html>
